version: '3'
services:
  product-service:
    build: ./Product.Service
    container_name: product-service
    ports:
    - "5000:80"
    environment: 
    - JAEGER_SERVICE_NAME=Product.Service
    - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    - JAEGER_SAMPLER_TYPE=const
    - JAEGER_SAMPLER_PARAM=1
    - MongoDbConnectionString=mongodb://mongo-product-service:27017
    - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - AWS_REGION=$AWS_REGION
    depends_on: 
    - mongo-product-service
    - jaeger

  cart-service:
    build: ./Cart.Service
    container_name: cart-service
    ports:
    - "5050:80"
    environment: 
    - JAEGER_SERVICE_NAME=Cart.Service
    - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    - JAEGER_SAMPLER_TYPE=const
    - JAEGER_SAMPLER_PARAM=1
    - MongoDbConnectionString=mongodb://mongo-cart-service:27017
    - ProductServiceURI=http://product-service
    - AmazonSQSCheckoutQueueURL=https://sqs.us-east-1.amazonaws.com/428534468426/hackaiti-marketplace-start-checkout
    - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - AWS_REGION=$AWS_REGION
    depends_on: 
    - mongo-cart-service
    - product-service
    - jaeger
  
  checkout-service:
    build: ./Checkout.Service
    container_name: checkout-service
    ports:
    - 8080:8080
    environment: 
    - JAEGER_SERVICE_NAME=Checkout.Service
    - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    - JAEGER_SAMPLER_TYPE=const
    - JAEGER_SAMPLER_PARAM=1
    - AmazonSQSCheckoutQueueURL=https://sqs.us-east-1.amazonaws.com/428534468426/hackaiti-marketplace-start-checkout
    - PrometheusPort=8080
    - CurrencyServiceURI=http://currency-service
    - ZupInvoiceServiceURI=http://zup-mock-api
    - KafkaBootstrapServers=kafka:9092
    - KafkaTimelineOrderTopicName=orders_topic
    - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - AWS_REGION=$AWS_REGION
    depends_on:
    - zup-mock-api
    - kafka
    - jaeger

  currency-service:
    build: ./Currency.Service
    container_name: currency-service
    ports:
    - 5100:80
    environment: 
    - JAEGER_SERVICE_NAME=Currency.Service
    - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    - JAEGER_SAMPLER_TYPE=const
    - JAEGER_SAMPLER_PARAM=1
    - RedisConnectionString=redis:6379
    - ZupCurrenciesServiceURI=http://zup-mock-api
    - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - AWS_REGION=$AWS_REGION
    depends_on: 
    - redis
    - zup-mock-api
    - jaeger

  zup-mock-api:
    build: ./zup-mock-api
    container_name: zup-mock-api
    environment: 
    - SERVER_PORT:80
    ports:
    - 8280:80

  redis:
    image: redis
    container_name: redis
    ports: 
    - 6379:6379
    
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
    - ./prometheus/:/etc/prometheus/
    command:
    - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
    - 9090:9090
    depends_on: 
    - product-service
    - cart-service
    - checkout-service
    - currency-service

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
    - 3000:3000
    volumes: 
    - ./grafana/volume:/var/lib/grafana
    user: ${USER_ID}
    depends_on: 
    - prometheus

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    ports:
    - 5775:5775/udp
    - 6831:6831/udp
    - 6832:6832/udp
    - 5778:5778
    - 16686:16686
    - 14268:14268
    - 14250:14250
    - 9411:9411
    environment: 
    - COLLECTOR_ZIPKIN_HTTP_PORT=9411
  
  mongo-product-service:
    image: mongo
    container_name: mongo-product-service

  mongo-cart-service:
    image: mongo
    container_name: mongo-cart-service

  zookeper:
    image: confluent/zookeeper
    container_name: zookeeper
    ports:
    - 2181:2181

  kafka:
    image: confluent/kafka
    container_name: kafka
    ports:
    - 9092:9092
    depends_on:
    - zookeper